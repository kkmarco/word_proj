{"version":3,"sources":["../../../../../assets/Script/Common/assets/Script/Common/BaseScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Common","sourcesContent":["import EventUtil from \"../Util/EventUtil\";\r\nimport GameEvent from \"../Const/GameEvent\";\r\nimport SwitchViewData from \"./SwitchViewData\";\r\nimport ViewStack from \"./ViewStack\";\r\nimport PopViewData from \"./PopViewData\";\r\nimport Util from \"../Util/Util\";\r\nimport { Enum } from \"../Const/Enum\";\r\n\r\n/**\r\n * BaseScene\r\n */\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseScene extends cc.Component{\r\n    private static ACTIVATE_ZORDER = 10000;                     // Zorder of the view\r\n    private static DEACTIVATE_ZORDER = 1;                       // All Deactive zoder\r\n    private preFabMap : {[key : string] : cc.Node} = {};        // All views in current Scene\r\n    private activatePreFab : cc.Node = null;                    // Current activate view\r\n    private defaultViewName : string;                           // Default view\r\n    start(){\r\n        EventUtil.addEvent(GameEvent.SWITCH_VIEW,this.onSwitchView,this);\r\n        EventUtil.addEvent(GameEvent.POP_VIEW, this.onPopView,this);\r\n    }\r\n\r\n    // When initialising all scenes，must set the default view\r\n    protected setDefaultView(defaultViewName : string){\r\n        this.defaultViewName = defaultViewName;\r\n    }\r\n\r\n    /**Switch View，can only switch prefab document's prefab */\r\n    protected onSwitchView(event : cc.Event.EventCustom){\r\n        let detail : SwitchViewData = event.detail[0];\r\n        if (!detail){\r\n            return ;\r\n        }\r\n        console.log(\"Switch view, The view name is\" + detail.prefabPath);\r\n        let isPopup : boolean = detail.switchType == Enum.SWITCH_TYPE.Popup\r\n        if (this.activatePreFab && this.activatePreFab.name == detail.prefabPath){\r\n            console.log(\"The switching interface is the same as the current interface\");\r\n            return ;\r\n        }\r\n        // Buffered interface\r\n        if (this.preFabMap[detail.prefabPath]){\r\n            this.switch(detail.prefabPath,true,isPopup);\r\n            return ;\r\n        }\r\n        // All cc.loader.loadRes can only be under resources folder, No suffix is ​​required.\r\n        cc.loader.loadRes(\"prefab/\" + detail.prefabPath,(err, prefab) => {\r\n            if(err){\r\n                console.log(\"load prefab error，prefab name is：\" + detail.prefabPath);\r\n                return;\r\n            }\r\n            let view = cc.instantiate(prefab);\r\n            this.preFabMap[detail.prefabPath] = view;\r\n            this.node.addChild(view);\r\n            this.node.x = 0;\r\n            this.node.y = 0;\r\n            this.switch(detail.prefabPath,true,isPopup);\r\n        });\r\n    }\r\n\r\n    /**Switch view by Name */\r\n    protected switch(viewName,push ?: boolean,isPopup ?: boolean){\r\n        if (!this.preFabMap[viewName]){\r\n            return ;\r\n        }\r\n        this.preFabMap[viewName].active = true;\r\n        if (this.activatePreFab){\r\n            // active will cause the view to disappear\r\n            this.activatePreFab.active = isPopup;\r\n            this.activatePreFab.setLocalZOrder(BaseScene.DEACTIVATE_ZORDER);\r\n            if (push){\r\n                // Be careful，the name here is prefab's name，not script name\r\n                ViewStack.Push(this.activatePreFab.name);\r\n            }\r\n        }\r\n        this.activatePreFab = this.preFabMap[viewName];\r\n        Util.addTouchLayer(this.activatePreFab);\r\n        this.activatePreFab.setLocalZOrder(BaseScene.ACTIVATE_ZORDER);\r\n    }\r\n\r\n    /**Pop-out View */\r\n    protected onPopView(event : cc.Event.EventCustom){\r\n        let viewName = ViewStack.Pop();\r\n        // pop-out current view\r\n        console.log(\"Pop-out View,Pop-out View is:\"+ viewName);\r\n        let detail : PopViewData = event.detail;\r\n        if (detail && detail.destoryView){\r\n            this.destoryCurView();\r\n        }\r\n        if (viewName){\r\n            this.switch(viewName);\r\n        }else{\r\n            this.switchDefaultView();\r\n        }\r\n    }\r\n\r\n    /** Delete view */\r\n    private destoryCurView(){\r\n        if (this.activatePreFab){\r\n            console.log(\"destory view\");\r\n            this.preFabMap[this.activatePreFab.name] = null;\r\n            this.activatePreFab.destroy();\r\n            this.activatePreFab.removeFromParent();\r\n            this.activatePreFab = null;\r\n        }\r\n    }\r\n\r\n    protected switchDefaultView(){\r\n        if (this.defaultViewName){\r\n            let switchViewData = new SwitchViewData(this.defaultViewName)\r\n            EventUtil.dispatchEvent(GameEvent.SWITCH_VIEW,switchViewData);\r\n        }else{\r\n            this.destoryCurView();\r\n        }\r\n    }\r\n\r\n    onDestroy(){\r\n        EventUtil.removeEvent(GameEvent.SWITCH_VIEW, this.onSwitchView, this);\r\n        EventUtil.removeEvent(GameEvent.POP_VIEW, this.onPopView, this);\r\n        this.preFabMap = null;\r\n        this.activatePreFab = null;\r\n    }\r\n}"]}