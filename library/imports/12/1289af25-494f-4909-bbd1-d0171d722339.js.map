{"version":3,"sources":["../../../../../assets/Script/Common/assets/Script/Common/Number.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;;GAEG;AAEH;IAAoC,0BAAQ;IAD5C;QAAA,qEAyCC;QAtCG;;WAEG;QAEH,aAAO,GAAU,EAAE,CAAC;QAEV,SAAG,GAAO,EAAE,CAAC;QACb,YAAM,GAAU,CAAC,CAAC;;IA+BhC,CAAC;IA7BG,uBAAM,GAAN;QACI,iBAAM,MAAM,WAAE,CAAC;QAEf,IAAI,IAAI,GAAU,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,GAAG,GAAU,IAAI,CAAC,MAAM,CAAC;QAC7B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,GAAG,EAAG,CAAC,EAAE,EAAC,CAAC;YAC3B,IAAI,IAAI,GAAU,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC;IACL,CAAC;IAGD,sBAAI,yBAAK;aAcT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAhBD,UAAU,CAAQ;YACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAEhB,IAAI,IAAI,GAAU,EAAE,CAAC;YACrB,IAAI,IAAI,GAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,GAAG,GAAU,IAAI,CAAC,MAAM,CAAC;YAC7B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,GAAG,EAAG,CAAC,EAAE,EAAC,CAAC;gBAC3B,IAAI,IAAI,GAAU,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACjC,CAAC;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;;;OAAA;IA7BD;QADC,QAAQ;2CACW;IAiBpB;QADC,QAAQ;uCAaR;IAnCgB,MAAM;QAD1B,OAAO;OACa,MAAM,CAwC1B;IAAD,aAAC;CAxCD,AAwCC,CAxCmC,EAAE,CAAC,KAAK,GAwC3C;kBAxCoB,MAAM","file":"","sourceRoot":"../../../../../assets/Script/Common","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n/**\r\n * Digital controls\r\n */\r\n@ccclass\r\nexport default class Number extends cc.Label {\r\n\r\n    /**\r\n     * Character mapping order\r\n     */\r\n    @property\r\n    charMap:string = \"\";\r\n\r\n    protected map:any = {};\r\n    protected _value:number = 0;\r\n\r\n    onLoad () {\r\n        super.onLoad();\r\n        \r\n        let text:string = this.charMap;\r\n        let len:number = text.length;\r\n        for(let i = 0 ; i < len ; i++){\r\n            let char:string = text.substr(i, 1);\r\n            this.map[char] = String.fromCharCode(48 + i);\r\n        }\r\n    }\r\n\r\n    @property\r\n    set value(v:number){\r\n        this._value = v;\r\n\r\n        let show:string = \"\";\r\n        let text:string = v.toString();\r\n        let len:number = text.length;\r\n        for(let i = 0 ; i < len ; i++){\r\n            let char:string = text.substr(i, 1);\r\n            show += this.map[char] || \"\";\r\n        }\r\n\r\n        this.string = show;\r\n    }\r\n\r\n    get value():number{\r\n        return this._value;\r\n    }\r\n}\r\n"]}