{"version":3,"sources":["../../../../../assets/Script/ViewScript/assets/Script/ViewScript/GameViewScript.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/ViewScript","sourcesContent":["import Util from \"../Util/Util\";\r\nimport WordUtil from \"../Util/WordUtil\";\r\nimport WordModel from \"../Model/WordModel\";\r\nimport EventUtil from \"../Util/EventUtil\";\r\nimport GameEvent from \"../Const/GameEvent\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameViewScript extends cc.Component {\r\n\r\n    @property(cc.Layout)\r\n    wordLayout: cc.Layout = null;\r\n\r\n    @property(cc.Label)\r\n    labWord: cc.Label = null;\r\n\r\n    private line:cc.Node = null;\r\n    private topInfo : cc.Node = null;\r\n\r\n    private wordNodeLst: Array<cc.Node> = new Array();\r\n    private keyWordNodeLst : Array<cc.Node> = new Array();\r\n    private wordSize:cc.Size = null;\r\n    private touchStartRow = 0;\r\n    private touchStartCol = 0;\r\n    private touchEndRow = 0;\r\n    private touchEndCol = 0;\r\n    private preTouchRow = 0;\r\n    private preTouchCol = 0;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        cc.loader.loadRes(\"prefab/TopInfo\",(err,prefab)=>{\r\n            if (err){\r\n                return;\r\n            }\r\n            let node = cc.instantiate(prefab);\r\n            this.node.addChild(node);\r\n            this.topInfo = node;\r\n            this.initWord();\r\n        });\r\n        this.node.on(cc.Node.EventType.TOUCH_START,this.onTouchHandle,this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE,this.onTouchHandle,this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END,this.onTouchHandle,this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL,this.onTouchHandle,this);\r\n        EventUtil.addEvent(GameEvent.RESTART_GAME,this.initWord,this);\r\n        EventUtil.addEvent(GameEvent.WORD_ADD_FIND,this.updateWordMap,this);\r\n    }\r\n\r\n    private initWord(){\r\n        for (let node of this.wordNodeLst){\r\n            node.removeFromParent();\r\n        }\r\n        this.wordNodeLst = new Array();\r\n        WordModel.getInstance().init();\r\n        let script = this.topInfo.getComponent(\"TopInfoScript\");\r\n        script.restart();\r\n        let wordGrid = WordModel.getInstance().getWordGrid();\r\n        let gapX = this.wordLayout.node.width / WordUtil.COL;\r\n        let gapY = this.wordLayout.node.height / WordUtil.ROW;\r\n        this.wordSize = new cc.Size(gapY,gapX);\r\n        // 初始化字母\r\n        cc.loader.loadRes(\"prefab/WordCell\",(err,prefab)=>{\r\n            if(err){\r\n                console.log(\"加载prefab失败\"+err);\r\n                return ;\r\n            }\r\n            for (let i in wordGrid){\r\n                let word = wordGrid[i];\r\n                for (let k in word){\r\n                    let color = new cc.Color(0,0,0,0xff);\r\n                    let node : cc.Node = cc.instantiate(prefab);\r\n                    let script = node.getComponent(\"WordCellScript\");\r\n                    script.row = Number(i);\r\n                    script.col = Number(k);\r\n                    script.word = word[k];\r\n                    let lab = node.getComponent(cc.Label);\r\n                    lab.string = word[k];\r\n                    this.wordLayout.node.addChild(node);\r\n                    node.x = Number(k) * gapX + gapX / 2;\r\n                    node.y = -Number(i) * gapY - gapY / 2;\r\n                    script.posx = node.x;\r\n                    script.posy = node.y;\r\n                    this.wordNodeLst.push(node)\r\n                }\r\n            }\r\n        });\r\n        this.updateWordMap(null);\r\n    }\r\n\r\n    private updateWordMap(event : cc.Event.EventCustom){\r\n        for (let node of this.keyWordNodeLst){\r\n            node.removeFromParent();\r\n        }\r\n        this.keyWordNodeLst = new Array();\r\n        // 初始化单词\r\n        cc.loader.loadRes(\"prefab/KeyWordCell\",(err,prefab)=>{\r\n            if(err){\r\n                console.log(\"加载prefab失败\"+err);\r\n                return ;\r\n            }\r\n            let wordLst = WordModel.getInstance().getWordLst();\r\n            let gapX = this.wordLayout.node.width / 3;\r\n            let gapY = 80;\r\n            let y = -280;\r\n            for (let i in wordLst){\r\n                let index = Number(i);\r\n                if (index % 3 == 0){\r\n                    y -= gapY\r\n                }\r\n                let node : cc.Node = cc.instantiate(prefab);\r\n                this.node.addChild(node);\r\n                node.x = -this.wordLayout.node.width / 2 + gapX * (index % 3 + 0.5);\r\n                node.y = y;\r\n                let script = node.getComponent(\"KeyWordCellScript\");\r\n                script.setWord(wordLst[i]);\r\n                this.keyWordNodeLst.push(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onTouchHandle(event : cc.Event.EventTouch){\r\n        let wp = event.getLocation()\r\n        let node = this.getTouchNode(wp);\r\n        if (!node){\r\n            if (event.type == cc.Node.EventType.TOUCH_CANCEL || event.type == cc.Node.EventType.TOUCH_END){\r\n                this.removeLine();\r\n            }\r\n            return;\r\n        }\r\n        let script = node.getComponent(\"WordCellScript\");\r\n        script.shakeAction();\r\n        let row = script.row;\r\n        let col = script.col;\r\n        if (event.type == cc.Node.EventType.TOUCH_START){\r\n            this.touchStartRow = row;\r\n            this.touchStartCol = col;\r\n            this.touchEndRow = 0;\r\n            this.touchEndCol = 0;\r\n            this.preTouchRow = row;\r\n            this.preTouchCol = col;\r\n            this.drawLine(row,col);\r\n            this.labWord.string = WordModel.getInstance().getLetter(row,col);\r\n        }\r\n        if (row == this.preTouchRow && col == this.preTouchCol){return;}\r\n        if(this.touchStartRow == row && this.touchStartCol == col){return;}\r\n        if (row == this.touchStartRow || col == this.touchStartCol ||\r\n            Math.abs(row - this.touchStartRow) == Math.abs(col - this.touchStartCol)){\r\n                this.drawLine(row,col);\r\n                this.showWord(row,col);\r\n                this.touchEndRow = row;\r\n                this.touchEndCol = col;\r\n        }else{\r\n        }\r\n        if (event.type == cc.Node.EventType.TOUCH_END || \r\n        event.type == cc.Node.EventType.TOUCH_CANCEL){\r\n            this.removeLine();\r\n            this.checkWord(this.touchEndRow,this.touchEndCol);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private drawLine(endRow,endCol){\r\n        let startNode = this.wordNodeLst[this.touchStartRow * WordUtil.COL + this.touchStartCol];\r\n        let endNode = this.wordNodeLst[endRow * WordUtil.COL + endCol];\r\n        let length = Math.pow(Math.pow(startNode.x - endNode.x,2) + Math.pow(startNode.y - endNode.y,2),0.5) + 80;\r\n        let rotation = 0;\r\n        if(endRow == this.touchStartRow){\r\n            rotation = 90;\r\n        }else if(endCol == this.touchStartCol){\r\n            rotation = 0;\r\n        }else{\r\n            if (endCol > this.touchStartCol){\r\n                rotation = endRow > this.touchStartRow ? 135 : 45;\r\n            }else{\r\n                rotation = endRow > this.touchStartRow ? 45 : 135;\r\n            }\r\n        }\r\n        // console.log(rotation);\r\n        if (!this.line){\r\n            let sp = Util.sprite9(\"resources/game/yellow.png\",20,40,20,40,null,length);\r\n            this.wordLayout.node.addChild(sp,-100);\r\n            this.line = sp;\r\n            this.line.rotation = rotation\r\n        }else{\r\n            this.line.active = true;\r\n            this.line.height = length;\r\n            this.line.rotation = rotation;\r\n        }\r\n        this.line.x = (startNode.x + endNode.x) / 2;\r\n        this.line.y = (startNode.y + endNode.y) / 2;\r\n    }\r\n\r\n    private showWord(endRow,endCol){\r\n        let str = WordModel.getInstance().getShowWord(this.touchStartRow,this.touchStartCol,\r\n        endRow,endCol);\r\n        this.labWord.string = str;\r\n    }\r\n\r\n    private removeLine(){\r\n        if (this.line){\r\n            this.line.active = false;\r\n        }\r\n    }\r\n\r\n    private getTouchNode(wp : cc.Vec2){\r\n        for (let node of this.wordNodeLst){\r\n            let np = node.convertToNodeSpaceAR(wp);\r\n            let script = node.getComponent(\"WordCellScript\");\r\n            if (np.x >= -this.wordSize.width / 2 && np.x <= this.wordSize.width / 2\r\n            && np.y >= -this.wordSize.height / 2 && np.y <= this.wordSize.height / 2){\r\n                return node;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkWord(endRow,endCol){\r\n        if (!endRow && !endCol){return ;}\r\n        let word = this.labWord.string;\r\n        let complete = WordModel.getInstance().checkComplete(word);\r\n        if(complete){\r\n            // The letters match successfully\r\n            WordModel.getInstance().resetCompleteArea(this.touchStartRow,\r\n            this.touchStartCol,endRow,endCol);\r\n            let array = WordUtil.getWordRowColLst(this.touchStartRow,this.touchStartCol,\r\n                endRow,endCol);\r\n            let rowArray = array.rowArray;\r\n            let colArray = array.colArray;\r\n            for (let i in rowArray){\r\n                let row = rowArray[i];\r\n                let col = colArray[i];\r\n                let node = this.wordNodeLst[row * WordUtil.COL + col];\r\n                let script = node.getComponent(\"WordCellScript\");\r\n                script.chageWordAction(WordModel.getInstance().getLetter(row,col));\r\n            }\r\n        }\r\n    }\r\n\r\n    private btnResetHandler(event : cc.Event.EventCustom){\r\n        WordModel.destoryInstance();\r\n        this.initWord();\r\n        this.labWord.string = \"\";\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}